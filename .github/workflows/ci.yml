name: CI
on:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: "package.json"

      - name: Get PNPM store path
        id: pnpm-store-path
        run: echo "PNPM_STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Restore PNPM Cache
        id: pnpm-cache
        uses: actions/cache/restore@v4
        with:
          path: ${{ steps.pnpm-store-path.outputs.PNPM_STORE_PATH }}
          key: pnpm-cache-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-cache-

      - name: Debugging logs
        run: |
          echo "Node.js Version"
          node -v
          echo "PNPM Version"
          pnpm -v
          echo "PNPM Store Path"
          pnpm store path
          echo "TypeScript Version"
          pnpm tsc -v

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Save pnpm cache
        if: steps.pnpm-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: ${{ steps.pnpm-store-path.outputs.PNPM_STORE_PATH }}
          key: pnpm-cache-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Lint
        run: pnpm dlx turbo lint

      - name: Format
        run: pnpm ci:format

      - name: Format Package json
        run: pnpm ci:format:packagejson

      - name: Build
        run: pnpm dlx turbo build

      - name: Check Types
        run: pnpm dlx turbo check-types
